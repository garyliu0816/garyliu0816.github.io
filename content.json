{"pages":[{"title":"","text":"efUSL9Wuh9","link":"/baidu_verify_efUSL9Wuh9.html"}],"posts":[{"title":"Anaconda常用指令","text":"1. 查看包conda list # 查看安装了哪些包conda env list # 查看有哪些虚拟环境conda -V # 查看conda的版本 2. 创建虚拟环境conda create -n [虚拟环境名] python=[python版本] [要安装的包...] conda create -n python3 python=3.6 numpy # 创建一个名为python3，python版本为3.6，安装了numpy的环境conda create -n backup --clone root # 创建一个名为backup的与root一样的环境 3. 切换环境source activate [环境名] # Linuxactivate [环境名] # Windows 4. 关闭环境source deactivate # Linuxdeactivate # Windows 5. 指定虚拟环境安装包conda install -n [虚拟环境名] [包名]# 或者可以先进入对应虚拟环境在执行pippip install [包名] 6. 移除虚拟环境conda remove --name [虚拟环境名] [包名] # 移除某个环境中的包conda remove -n [虚拟环境名] --all # 移除某个虚拟环境 7. 将环境备份至requirement.txtpip freeze &gt; requirements.txt 8. 安装备份的环境pip install -r requirements.txt","link":"/Anaconda常用指令.html"},{"title":"Markdown常用标记","text":"1. 标题# 一级标题## 二级标题 一级标题二级标题2. 分割线--- 3. 引用&gt;引用&gt;&gt;嵌套引用 引用 嵌套引用 4. 字体*倾斜***粗体*****倾斜加粗***~~删除线~~ 倾斜粗体倾斜加粗删除线 5. 超链接[超链接名](超链接地址 &quot;超链接title&quot;)![图片名](图片地址 &quot;图片title&quot;) 必应 6. 代码&apos;代码&apos;&apos;&apos;&apos;代码块&apos;&apos;&apos; print(&quot;hello world!&quot;)print(&quot;hello world!&quot;)print(&quot;hello world!!!&quot;) 7. 列表- [x] 支持以 PDF 格式导出文稿- [x] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率- [ ] 新增 Todo 列表功能- [ ] 修复 LaTex 公式渲染问题- [ ] 新增 LaTex 公式编号功能 支持以 PDF 格式导出文稿 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 新增 Todo 列表功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 8. 表格| 项目 | 价格 | 数量 || - | :-: | -: || 计算机 | $1600 | 5 || 手机 | $12 | 12 || 管线 | $1 | 234 | 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234","link":"/Markdown常用标记.html"},{"title":"tensorflow+cuda+cudnn安装成功的版本（持续更新）","text":"以下版本经过本人亲自测试可以安装使用 tensorflow cuda python cudnn visual C++ redistributable build tools gpu-1.13.1 10.1 3.7 7 2015 update 3 2015 Update 3 gpu-1.13.1 10.0 3.6 7 2015 update 3 2015 Update 3 gpu-1.12.0 9.0 3.5 7 2015 update 3 2015 Update 3","link":"/tensorflow-cuda-cudnn安装成功的版本（持续更新）.html"},{"title":"CADA-VAE论文阅读笔记","text":"文中涉及的概念Few-shot learning每个类只有很少的可见例子（一般小于10），训练一个模型对其分类。 Zero-shot learning现有一些可见的例子和一些不可见的例子，使用可见的例子训练模型能够对不可见的例子进行分类。 Generalized zero-shot learning现有一些可见的例子和一些不可见的例子，使用可见的例子训练模型能够对所有的例子进行分类。 Multi-modal alignment多模态对齐，寻找不同模态（如图像、文字、语音）中的属性的对应关系，文中主要是指多个VAE中的latent space的属性的对齐。 本文主要的工作贡献 训练了多个VAE从不同模态，如图像和类属性，中加密和解密特征，得到隐特征 通过对齐参数分布和减小跨模态重构损失来使隐特征多模态对齐 CADA-VAE证明了用于广义零镜头学习的交叉模态嵌入模型比数据生成方法具有更好的性能，建立了新的state-of-the-art。 主要的难点详解数据增强的方式不是增强数据本身而是增强数据的表达（隐特征） VAE变分自编码是自编码的一种，其学习得到的特征能够用于生成更多的数据。也就是我们想通过很多可观测到的X图像分布来构造出z特征，通过调整z的属性来得到更多不同的X1图像分布,所以我们的任务可以描述为： 使用X通过编码器计算得到z 通过z通过解码器计算得到X1 让q(z)与p(z|X)近可能的相似 这里的q(z)与p(z|X)是两个概率分布，通常计算两个概率分布的距离公式采用KL散度： $$D_{KL}({q(x)}\\parallel{p(x)})={\\sum p(x)\\ln\\frac{p(x)}{q(x)}}$$ 训练VAE的损失函数： $$loss_{VAE} = D_{KL}(q(X,z) \\parallel p(X,z)) = \\sum [- \\sum p(z|X)\\ln{q(X|z)} + D_{KL}({p(z|X)}\\parallel{q(z)})]$$ 模态对齐的方式这里两种模态的特征都是用VAE生成的，第一个模态的特征z_1是使用图像生成的，第二个模态的特征z_2是使用类属性生成的，要使他们的属性对齐文中采用了两种损失函数。 交叉对齐损失实际上就是将一张图像x与其类属性分别通过编码器E_1、E_2后得到的z_1、z_2交叉通过解码器D_1、D_2得到的x’计算欧式距离 $$loss_{CA} = \\sum^M_i\\sum^M_{j\\not={i}}\\left|x^{(j)}-D_j(E_i(x^{(i)}))\\right|$$ 分布对齐损失这里实际上是在计算z_1、z_2的概率分布的相似程度，采用的是Wasserstein距离： $$W_{ij}=\\left(\\left|\\mu_i-\\mu_j\\right|^2_2+\\left|\\sum\\nolimits^{1\\over2}_i-\\sum\\nolimits^{1\\over2}j\\right|^2{Frobenius}\\right)^{1\\over2}$$ 而分布对齐损失就是所有组合情况的Wasserstein距离之和： $$loss_{DA}=\\sum^M_i\\sum^M_{j\\not=i}W_{ij}$$ 整体的损失函数就是上述三个损失函数的加权求和： $$loss_{CADA-VAE}=loss_{VAE}+\\gamma loss_{CA}+\\delta loss_{DA}$$ 总结作者提出的zero-shot learning的思想主要是如何将图像通过一个VAE得到的特征与该图像对应的类属性通过另一个VAE得到的特征对应起来，这样就可以将类属性提取的特征可以与图像提取的特征进行比较，当一个未知图像进入模型后就能计算出它的特征与各个类属性的特征之间的距离，根据各个距离之间的比例就能实现zero-shot learning。","link":"/CADA-VAE论文阅读笔记.html"},{"title":"简单理解PRF","text":"精准率模型输出的结果是正确的概率 召回率模型中原本应该输出的结果是实际输出的概率 混淆矩阵 精准率$$P={TP\\over{TP+FP}}$$ 回归率$$R={TP\\over{TP+FN}}$$ F1-score$$F1=2{PR\\over{P+R}}$$ 多说一句 精准率低相当于输出的预测很多都是错的 召回率低相当于很多应该被预测到的结果没有预测到","link":"/简单理解PRF.html"}],"tags":[{"name":"python","slug":"python","link":"/tags/python/"},{"name":"anaconda","slug":"anaconda","link":"/tags/anaconda/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"tensorflow","slug":"tensorflow","link":"/tags/tensorflow/"},{"name":"gpu","slug":"gpu","link":"/tags/gpu/"},{"name":"cuda","slug":"cuda","link":"/tags/cuda/"},{"name":"deep learning","slug":"deep-learning","link":"/tags/deep-learning/"},{"name":"zero-shot learning","slug":"zero-shot-learning","link":"/tags/zero-shot-learning/"},{"name":"few-shot learning","slug":"few-shot-learning","link":"/tags/few-shot-learning/"}],"categories":[{"name":"环境配置","slug":"环境配置","link":"/categories/环境配置/"},{"name":"学习笔记","slug":"学习笔记","link":"/categories/学习笔记/"}]}